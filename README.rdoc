== README
1) To set up Postgres include in the Gemfile the following line:
    gem 'pg', '0.17.0'
2) Create a 'ruby_user' account in Postgres

3) Log into postgres and create a database with the line:
    CREATE DATABASE trio_dev;
4) Install Postgres and set the owner of the database to be ruby_user by running the line:
    ALTER DATABASE trio_dev OWNER TO ruby_user;

== ANNOTATIONS
Annotations were used to keep track of what issues that need to be fixed, updated....basically a TODO list after everything is said and done.  

= RUBY ANNOTATION
To get a list of the default ruby annotations, run the following in the terminal:
rake notes

= CUSTOM ANNOTATION
The following custom annotations were used:
JAVASCRIPT_TEST - Used to denote where we need to test for AJAX/Javascript behavior
DUPLICATION_UPDATE - Noted where duplication in code, namely because of difference in languages (Javascript constants and Ruby Constants)

To get a list of the custom annotations in the project that I used run the following command in the terminal:
rake notes:custom ANNOTATION=JAVASCRIPT_TEST

= Resque
Installation
1) Installed Redis with:
  brew install redis
2) Added resque to Gemfile with line:
  gem 'resque'
3) Added file /lib/tasks/resque.rake
4) Start redis server with the following command in the terminal:
  redis-server
4) Started a worker with the following line ('mail' is the queue name)
  QUEUE=mail rake environment resque:work

  or

  VVERBOSE=1 QUEUE=mail rake environment resque:work

  if you want the console to output everything

Reminder: Any changes to the environment and Redis needs to be restarted

= Staging Environment
The Staging environment has a username and password set as local variables on Heroku.  The name of the environment variables are:
TRIO_APP_USERNAME
TRIO_APP_PASSWORD

To set the environment variable on Heroku type the following command:
heroku config:set --app trio-staging TRIO_APP_USERNAME=username
heroku config:set --app trio-staging TRIO_APP_PASSWORD=my_secret_password
heroku config:set --app trio-staging RAILS_ENV=staging
heroku config:set --app trio-staging RACK_ENV=staging

Add RedisCloud:
heroku addons:add rediscloud

= Production Environment
To stop app from serving requests:
  heroku ps:scale web=0 --app trio-production

To restart services:
  heroku ps:scale web=1 --app trio-production

To scale up resque workers (1 in this example):
  heroku ps:scale mailworker=1

Note: The worker 'mailworker' is defined in the Procfile.  You can have as many workers as you like ($$$).

= Application settings
Run the following command:
cp config/application.example.yml config/application.yml