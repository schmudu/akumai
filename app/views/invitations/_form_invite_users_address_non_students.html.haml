- provide(:title, "Review Invitations (Step 2 of 2)") 
= javascript_include_tag "form_utilities"

%h2= "Review Invitations ( #{t('invitations.form.messages.steps', index:2)} )"

.row#review_instructions
  - if (@invitation.user_level == ConstantsHelper::ROLE_LEVEL_ADMIN)
    = t('invitations.form.title.enter_email_addresses.admin')
  - elsif (@invitation.user_level == ConstantsHelper::ROLE_LEVEL_STAFF)
    = t('invitations.form.title.enter_email_addresses.staff')
  - elsif (@invitation.user_level == ConstantsHelper::ROLE_LEVEL_STUDENT)
    = t('invitations.form.title.enter_email_addresses.students')

- if (@invitation.user_level == ConstantsHelper::ROLE_LEVEL_ADMIN)
  %br/
  %br/
  .row.label.label-warning
    .span12
      %h5= t('invitations.form.warnings.admin_invitations') 

/ errors
= if @invitation.errors.any? 
  #error_explanation
    %h2= #{pluralize(@invitation.errors.count, "error")} prohibited this invitation from being saved:
    %ul
      -@invitation.errors.full_messages.each do |msg| 
        %li= msg 

%br/
%br/
= form_for(@invitation, url: {:action => :review }, html: {:class => 'form-horizontal', :id => 'review_invitations'}) do |f|
  / program
  #program_group.row
    .span4.form-label
      %span{:class => "form-label text-info"}
        = #{t('terms.program')}:
    .span8
      %span
        - unless session[:invite_users_program_name].nil?
          = session[:invite_users_program_name]
        - else
          = @program.name

  / user_level
  #invitation_group.row
    .span4.form-label
      %span{:class => "form-label text-info"}
        = #{t('terms.invitation_type')} :
    .span8
      %span
        = user_level_to_s(@invitation.user_level)

  / address
  #invitation_group.row
    #email_group.span4.form-label.control-group{:class => @invitation.errors.messages[:recipient_emails].nil? ? "" : "error" }
      %span{:class=>"form-label text-info"}
        = #{t('terms.email_addresses')} :
    .span8
    = f.text_area(:recipient_emails, :rows => "10") 

  .row
    .span4
    .span2
      = link_to(I18n.t('forms.buttons.cancel'), dashboard_path, :class => "btn btn-cancel")
    .span6
      = link_to(I18n.t('terms.back'), new_invitation_path(@invitation), :class => "btn")
      = f.submit(I18n.t('invitations.form.buttons.review_invitations'), :class => 'btn btn-success') 
